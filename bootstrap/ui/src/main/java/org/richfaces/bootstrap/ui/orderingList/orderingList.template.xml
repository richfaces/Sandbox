<?xml version="1.0" encoding="UTF-8"?>

<cdk:root xmlns="http://jboss.org/schema/richfaces/cdk/xhtml-el" xmlns:cdk="http://jboss.org/schema/richfaces/cdk/core"
    xmlns:c="http://jboss.org/schema/richfaces/cdk/jstl/core" xmlns:cc="http://jboss.org/schema/richfaces/cdk/jsf/composite">

    <cc:interface>
        <cdk:class>org.richfaces.bootstrap.ui.orderingList.OrderingListRenderer</cdk:class>
        <cdk:superclass>org.richfaces.bootstrap.ui.orderingList.OrderingListRendererBase</cdk:superclass>
        <cdk:renderer-type>org.richfaces.bootstrap.OrderingListRenderer</cdk:renderer-type>
        <cdk:component-base-class>org.richfaces.bootstrap.ui.orderingList.AbstractOrderingList</cdk:component-base-class>
        <cdk:renders-children>true</cdk:renders-children>
    </cc:interface>

    <cc:implementation>
        <cdk:object type="java.util.List" name="clientSelectItems" value="#{getClientSelectItems(facesContext, component)}"/>

        <div id="#{clientId}" class="#{component.styleClass}" cdk:passThrough="on* style">
            <input id="#{clientId}ListInput" name="#{clientId}" type="hidden" />
            
            <c:choose>
                <c:when test="#{! hasColumnChildren(facesContext, component)}">
                    <ol id="#{clientId}List">
                        <c:forEach var="itemObject" items="#{clientSelectItems}">
                            <!-- TODO: Add support for type-arguments to the cdk:object tag -->
                            <cdk:object name="item" type="org.richfaces.renderkit.ClientSelectItem" value="#{itemObject}" />
                            <li data-key="#{item.convertedValue}">#{item.label}</li>
                        </c:forEach>
                    </ol>
                </c:when>
                <c:otherwise>
                    <cdk:object name="columns" type="java.util.Iterator" value="#{component.columns()}" />
                    <table id="#{clientId}List">
                        <c:if test="#{columns != null and columns.hasNext()}">
                            <c:if test="#{isHeaderExists(facesContext, component)}">
                                <cdk:renderFragment name="renderColumnHeaders" columns="#{columns}" />
                            </c:if>
                            <cdk:renderFragment name="renderColumns" columns="#{columns}" clientSelectItems="#{clientSelectItems}"/>
                        </c:if>

                    </table>
                </c:otherwise>
            </c:choose>
        </div>
        <script type="text/javascript">
            <cdk:scriptObject name="listDimensions">
                <cdk:scriptOption name="width" value="#{component.listWidth}"/>
                <cdk:scriptOption name="height" value="#{component.listHeight}"/>
                <cdk:scriptOption name="min-height" value="#{component.minListHeight}"/>
                <cdk:scriptOption name="max-height" value="#{component.maxListHeight}"/>
            </cdk:scriptObject>
            <cdk:scriptObject name="widgetOptions">
                <cdk:scriptOption name="header" value="#{component.caption}" />
                <cdk:scriptOption name="headerClass" value="#{component.captionStyleClass}" />
                <cdk:scriptOption name="disabled" value="#{component.disabled}" />
                <cdk:scriptOption name="disabledClass" value="disabled #{component.disabledClass}" />
                <cdk:scriptOption name="selecteeClass" value="#{component.itemStyleClass}" />
                <cdk:scriptOption name="selectedClass" value="#{component.selectedItemStyleClass}" />
                <cdk:scriptOption name="dimensions" value="#{listDimensions}" />
            </cdk:scriptObject>
            <cdk:scriptObject name="bridgeOptions">
                <cdk:scriptOption name="componentId" value="#{clientId}" />
                <cdk:scriptOption attributes="onchange" wrapper="eventHandler" />
            </cdk:scriptObject>
            jQuery(function() {
                var $list = $(document.getElementById('#{clientId}List'));
                $list.orderingList(#{toScriptArgs(widgetOptions)});
                $list.orderingListBridge(#{toScriptArgs(bridgeOptions)});
            });
        </script>
    </cc:implementation>

    <cdk:fragment name="renderColumnHeaders">
        <cc:interface>
            <cc:attribute name="columns" type="java.util.Iterator" />
        </cc:interface>
        <cc:implementation>
            <thead>
                <tr>
                    <c:forEach var="columnObject" items="#{columns}">
                        <!-- TODO: Add support for type casting to the cdk forEach statement -->
                        <cdk:object name="column" type="javax.faces.component.UIColumn" value="#{columnObject}" />
                        <th>
                            <c:if test='#{hasFacet(column, "header")}'>
                                <cdk:object name="header" type="javax.faces.component.UIComponent" value="#{column.header}" />
                                <c:if test='#{header.rendered}'>
                                    <cdk:call expression="header.encodeBegin(facesContext)" />
                                    <cdk:call expression="renderChildren(facesContext, header)" />
                                    <cdk:call expression="header.encodeEnd(facesContext)" />
                                </c:if>
                            </c:if>
                        </th>
                    </c:forEach>
                </tr>
            </thead>
        </cc:implementation>
    </cdk:fragment>

    <cdk:fragment name="renderColumns">
        <cc:interface>
            <cc:attribute name="columns" type="java.util.Iterator" />
            <cc:attribute name="clientSelectItems" type="java.util.List" />
        </cc:interface>
        <cc:implementation>
            <tbody>
                <cdk:object name="requestMap" type="java.util.Map" value="#{facesContext.getExternalContext().getRequestMap()}" />
                <cdk:object name="oldVar" type="java.lang.Object" value="#{requestMap.get(component.getVar())}" />
                <cdk:object name="columnClasses" type="String[]"
                            value="#{(component.getColumnClasses() != null) ? component.getColumnClasses().split(',') : null}"/>
                <c:forEach var="itemObject" items="#{clientSelectItems}">
                    <!-- TODO: Add support for type-arguments to the cc:attribute tag -->
                    <cdk:object name="item" type="org.richfaces.renderkit.ClientSelectItem" value="#{itemObject}" />
                    <!-- TODO: Find an elegant way of resetting the iterator -->
                    <cdk:call expression="columns = component.columns()" />
                    <cdk:call expression="requestMap.put(component.getVar(), item.getSelectItem().getValue())"/>
                    <tr data-key="#{item.convertedValue}">
                        <c:forEach var="columnObject" items="#{columns}" varStatus="varStatus">
                            <cdk:object name="column" type="javax.faces.component.UIColumn" value="#{columnObject}" />
                            <td class="#{getColumnClass(column, columnClasses, varStatus.index)}">
                                <cdk:call expression="column.encodeBegin(facesContext)" />
                                <cdk:call expression="renderChildren(facesContext, column)" />
                                <cdk:call expression="column.encodeEnd(facesContext)" />
                            </td>
                        </c:forEach>
                    </tr>
                </c:forEach>
                <cdk:call expression="requestMap.put(component.getVar(), oldVar)" />
                <cdk:call expression="oldVar = null" />
            </tbody>
        </cc:implementation>
    </cdk:fragment>

</cdk:root>
