<?xml version="1.0" encoding="UTF-8"?>

<cdk:root xmlns="http://jboss.org/schema/richfaces/cdk/xhtml-el"
          xmlns:cdk="http://jboss.org/schema/richfaces/cdk/core"
          xmlns:c="http://jboss.org/schema/richfaces/cdk/jstl/core"
          xmlns:cc="http://jboss.org/schema/richfaces/cdk/jsf/composite">

    <cc:interface>
        <cdk:class>org.richfaces.bootstrap.renderkit.InputRenderer</cdk:class>
        <cdk:superclass>org.richfaces.bootstrap.renderkit.InputRendererBase</cdk:superclass>
        <cdk:renderer-type>org.richfaces.bootstrap.InputRenderer</cdk:renderer-type>
    </cc:interface>

    <cc:implementation>
        <cdk:object type="org.richfaces.bootstrap.component.AbstractInput" name="input"
            value="#{castComponent(component)}"/>
            
        <cdk:call expression="encodeBeginWrapper(facesContext, component)"/>
        
        <c:if test="#{input.hasFacet('prepend')}">
            <cdk:object type="javax.faces.component.UIComponent" name="prependFacet"
                value="#{component.getFacet('prepend')}"/>
            <c:choose>
                <c:when test="#{prependFacet.family eq 'javax.faces.Panel'}">
                    <c:forEach var="child" items="#{component.getFacet('prepend').getChildren()}">
                        <c:choose>
                            <c:when test="#{input.containsStyleClass(child.attributes['styleClass'], 'btn')}">
                                <cdk:call expression="child.encodeAll(facesContext)"/>
                            </c:when>
                            <c:otherwise>
                                <span class="add-on">
                                    <cdk:call expression="child.encodeAll(facesContext)"/>
                                </span>
                            </c:otherwise>
                        </c:choose>
                    </c:forEach>
                </c:when>
                <c:otherwise>
                    <c:choose>
                        <c:when test="#{input.containsStyleClass(prependFacet.attributes['styleClass'], 'btn')}">
                            <cdk:call expression="prependFacet.encodeAll(facesContext)"/>
                        </c:when>
                        <c:otherwise>
                            <span class="add-on">
                                <cdk:call expression="prependFacet.encodeAll(facesContext)"/>
                            </span>
                        </c:otherwise>
                    </c:choose>
                </c:otherwise>
            </c:choose>
        </c:if>
        
        <c:choose>
            <c:when test="#{input.isReadonly()}">
                <span class="uneditable-input #{input.scale != null ? input.scale.inputStyleClass : ''}">#{input.value}</span>
            </c:when>
            <c:otherwise>
                <input id="#{clientId}" cdk:passThrough="style value placeholder"
                    class="#{input.scale != null ? input.scale.inputStyleClass : ''} #{input.isDisabled() ? 'disabled' : ''} #{input.styleClass}">
                    <cdk:call expression="addDisabledAttribute(facesContext, component)"/>
                </input>
            </c:otherwise>
        </c:choose>
        
        <c:if test="#{input.hasFacet('append')}">
            <cdk:object type="javax.faces.component.UIComponent" name="appendFacet"
                value="#{component.getFacet('append')}"/>
            <c:choose>
                <c:when test="#{appendFacet.family eq 'javax.faces.Panel'}">
                    <c:forEach var="child" items="#{component.getFacet('append').getChildren()}">
                        <c:choose>
                            <c:when test="#{input.containsStyleClass(child.attributes['styleClass'], 'btn')}">
                                <cdk:call expression="child.encodeAll(facesContext)"/>
                            </c:when>
                            <c:otherwise>
                                <span class="add-on">
                                    <cdk:call expression="child.encodeAll(facesContext)"/>
                                </span>
                            </c:otherwise>
                        </c:choose>
                    </c:forEach>
                </c:when>
                <c:otherwise>
                    <c:choose>
                        <c:when test="#{input.containsStyleClass(appendFacet.attributes['styleClass'], 'btn')}">
                            <cdk:call expression="appendFacet.encodeAll(facesContext)"/>
                        </c:when>
                        <c:otherwise>
                            <span class="add-on">
                                <cdk:call expression="appendFacet.encodeAll(facesContext)"/>
                            </span>
                        </c:otherwise>
                    </c:choose>
                </c:otherwise>
            </c:choose>
        </c:if>
        
        <cdk:call expression="encodeEndWrapper(facesContext, component)"/>
    </cc:implementation>

</cdk:root>
