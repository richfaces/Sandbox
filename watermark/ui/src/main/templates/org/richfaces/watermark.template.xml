<?xml version="1.0" encoding="UTF-8"?>

<cdk:root xmlns="http://jboss.org/schema/richfaces/cdk/xhtml-el" xmlns:cdk="http://jboss.org/schema/richfaces/cdk/core"
          xmlns:c="http://jboss.org/schema/richfaces/cdk/jstl/core" xmlns:cc="http://jboss.org/schema/richfaces/cdk/jsf/composite">

    <cc:interface>
        <cdk:class>org.richfaces.renderkit.html.WatermarkRenderer</cdk:class>
        <cdk:superclass>org.richfaces.renderkit.WatermarkRendererBase</cdk:superclass>
        <cdk:component-family>org.richfaces.Watermark</cdk:component-family>
        <cdk:renderer-type>org.richfaces.WatermarkRenderer</cdk:renderer-type>
        <cdk:component-base-class>org.richfaces.component.AbstractWatermark</cdk:component-base-class>
    </cc:interface>

    <cc:implementation>
        <span id="#{clientId}">
            <script id="#{clientId}Script" type="text/javascript">
                <cdk:scriptObject name="options">
                    <cdk:scriptOption attributes="styleClass" />
                    <cdk:scriptOption name="targetId" value="#{component.selector == null ? component.parent.clientId : null}" />
                    <cdk:scriptOption name="selector" value="#{component.selector != null ? component.selector : null}" />
                    <cdk:scriptOption name="text" value="#{getConvertedValue(facesContext, component)}" />
                </cdk:scriptObject>
                new RichFaces.ui.Watermark("#{clientId}", #{toScriptArgs(options)});
            </script>
        </span>
    </cc:implementation>

</cdk:root>